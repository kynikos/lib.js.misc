"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

// Generated by CoffeeScript 2.7.0
// lib.cs.misc - Check the status of code repositories under a root directory.
// Copyright (C) 2016 Dario Giovannetti <dev@dariogiovannetti.net>
// This file is part of lib.cs.misc.
// lib.cs.misc is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// lib.cs.misc is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// You should have received a copy of the GNU General Public License
// along with lib.cs.misc.  If not, see <http://www.gnu.org/licenses/>.
var $;
$ = require('jquery');

require("jquery-ui-browserify");

module.exports.DatePicker = /*#__PURE__*/function () {
  function DatePicker() {
    var _this = this;

    _classCallCheck(this, DatePicker);

    this.display = $('<input>').attr({
      'type': 'text',
      'readonly': 'true',
      'size': 30,
      'placeholder': 'Select a date'
    }).addClass('datepicker-display').click(function () {
      return _this.input.datepicker('show');
    });
    this.input = $('<input>').attr('type', 'hidden').datepicker({
      dateFormat: 'yy-mm-dd',
      altField: this.display,
      altFormat: "DD, d MM yy",
      firstDay: 1
    });
  }

  _createClass(DatePicker, [{
    key: "show",
    value: function show() {
      return this.input.datepicker('show');
    }
  }, {
    key: "hide",
    value: function hide() {
      return this.input.datepicker('hide');
    }
  }, {
    key: "set_date",
    value: function set_date(date) {
      if (typeof date === 'string') {
        date = $.datepicker.parseDate('yy-mm-dd', date);
      }

      return this.input.datepicker("setDate", date);
    }
  }, {
    key: "get_date",
    value: function get_date() {
      return this.input.val();
    }
  }, {
    key: "enable",
    value: function enable() {
      return this.display.removeAttr('disabled');
    }
  }, {
    key: "disable",
    value: function disable() {
      this.input.datepicker("setDate", null);
      return this.display.attr('disabled', 'true');
    }
  }]);

  return DatePicker;
}();